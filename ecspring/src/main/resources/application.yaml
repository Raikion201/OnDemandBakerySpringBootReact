spring:
  datasource:
    url: jdbc:mysql://${MYSQL_HOST:localhost}:${MYSQL_PORT:3306}/${MYSQL_DATABASE:ec}
    username: ${MYSQL_USER:root}
    password: ${MYSQL_PASSWORD:yourpassword}
  jpa:
    database: mysql
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
    hibernate:
      ddl-auto: update
  security:
    oauth2:
      client:
        registration:
         google:
          client-id: ${GOOGLE_CLIENT_ID:your}
          client-secret: ${GOOGLE_CLIENT_SECRET:your}
          scope:
            - email
            - profile
            - openid
          redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
          authorization-grant-type: authorization_code
  mail:
    host: ${MAIL_HOST:smtp.gmail.com}
    port: ${MAIL_PORT:587}
    username: ${MAIL_USERNAME:dummy@gmail.com}
    password: ${MAIL_PASSWORD:dummypassword}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
jwt:
  secret: ${JWT_SECRET:OnDemandBakerySecretKey2024VerySecureAndLongEnoughForProduction}
  expiration:
    access: ${JWT_ACCESS_EXPIRATION:3600000}
    refresh: ${JWT_REFRESH_EXPIRATION:604800000}
logging:
  level:
    org.springframework.security: ${LOG_LEVEL:INFO}
app:
  frontend-url: ${FRONTEND_URL:http://localhost:3000}
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:${FRONTEND_URL:http://localhost:3000}}
    allowed-methods: ${CORS_ALLOWED_METHODS:GET,POST,PUT,DELETE,PATCH,OPTIONS}

# Ollama Configuration
ollama:
  api:
    url: ${OLLAMA_API_URL:http://localhost:11434}
  model: ${OLLAMA_MODEL:gemma3:4b}
